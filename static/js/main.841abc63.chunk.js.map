{"version":3,"sources":["component/main.js","App.js","serviceWorker.js","index.js"],"names":["MAIN","props","selected_id","state","isLoading","variable","vars","window","location","search","substring","split","i","length","pair","this","setState","selected","getQueryVariable","fetch","process","then","response","json","data","id","className","article","questions","options","model","map","key","index","style","color","answer","human","React","Component","App","random","bind","top_500_entropy","Math","floor","href","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oNA2FeA,G,uDAtFX,WAAYC,GAAQ,IAAD,0BAERC,GADP,cAAMD,IACqBA,MAApBC,YAFQ,OAGf,EAAKC,MAAQ,CACTD,YAAaA,EACbE,WAAW,GALA,E,6DASFC,GAGb,IAFA,IACIC,EADQC,OAAOC,SAASC,OAAOC,UAAU,GAC5BC,MAAM,KACdC,EAAI,EAAGA,EAAIN,EAAKO,OAAQD,IAAK,CAClC,IAAIE,EAAOR,EAAKM,GAAGD,MAAM,KACzB,GAAIG,EAAK,KAAOT,EACZ,OAAOS,EAAK,GAGpB,OAAQ,I,0CAGS,IAAD,OAChBC,KAAKC,SAAS,CAACZ,WAAW,IAC1B,IAAIa,EAAWF,KAAKZ,MAAMD,aAEU,IAAhCa,KAAKG,iBAAiB,QACtBD,EAAWF,KAAKG,iBAAiB,MACjCH,KAAKC,SAAS,CAACd,YAAae,KAGhCE,MAAMC,4BAA2CH,EAAW,SACnDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKR,SAAS,CAACQ,KAAMA,EAAMpB,WAAW,S,+BAGtD,IAAD,OAEL,OAAIW,KAAKZ,MAAMC,UACJ,0CAGP,yBAAKqB,GAAG,QACJ,6BAASC,UAAU,QACf,gCACI,yBAAKA,UAAU,SACX,mCAASX,KAAKZ,MAAMD,eAK5B,yBAAKwB,UAAU,cACX,6BACI,uCACA,2BAAIX,KAAKZ,MAAMqB,KAAKG,QAApB,MAEJ,6BACI,wCACA,4BAAKZ,KAAKZ,MAAMqB,KAAKI,WACrB,qDACA,4BACKb,KAAKZ,MAAMqB,KAAKK,QAAQC,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAC/B,wBAAID,IAAKA,EAAMC,EACXC,MAAO,CAACC,MAAOF,IAAU,EAAK9B,MAAMqB,KAAKY,OAAON,MAAQ,UAAY,UACnEE,OAIb,6BACA,qDACA,4BACKjB,KAAKZ,MAAMqB,KAAKK,QAAQQ,MAAMN,KAAI,SAACC,EAAKC,GAAN,OAC/B,wBAAID,IAAKA,EAAMC,EACXC,MAAO,CAACC,MAAOF,IAAU,EAAK9B,MAAMqB,KAAKY,OAAOC,MAAQ,UAAY,UACnEL,e,GA3EtBM,IAAMC,YCoCVC,E,kDAjCX,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IACDE,MAAQ,CACTD,YAAa,EAAKuC,UAGtB,EAAKA,OAAS,EAAKA,OAAOC,KAAZ,gBANC,E,qDAUf,IAAMC,EAAkr1H,OAAOA,EAAgBC,KAAKC,MAAMD,KAAKH,SAAWE,EAAgB9B,W,+BAKlE,OACI,yBAAKa,UAAU,OACX,4BAAQA,UAAU,cACd,yBAAKD,GAAG,WACJ,4BAAQA,GAAG,UACP,4BACI,uBAAGqB,KAAK,cAAR,mCAGR,kBAAC,EAAD,CAAM5C,YAAaa,KAAKZ,MAAMD,qB,GA3BpCoC,IAAMC,WCQJQ,QACW,cAA7BxC,OAAOC,SAASwC,UAEe,UAA7BzC,OAAOC,SAASwC,UAEhBzC,OAAOC,SAASwC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpC,MAAK,SAAAqC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.841abc63.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nclass MAIN extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const {selected_id} = this.props\n        this.state = {\n            selected_id: selected_id,\n            isLoading: true\n        }\n    }\n\n    getQueryVariable(variable) {\n        var query = window.location.search.substring(1);\n        var vars = query.split(\"&\");\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\");\n            if (pair[0] === variable) {\n                return pair[1];\n            }\n        }\n        return (false);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        let selected = this.state.selected_id\n\n        if (this.getQueryVariable('id') !== false) {\n            selected = this.getQueryVariable('id')\n            this.setState({selected_id: selected})\n        }\n\n        fetch(process.env.PUBLIC_URL + '/distractors/' + selected + '.json')\n                .then(response => response.json())\n                .then(data => this.setState({data: data, isLoading: false}))\n    }\n\n    render() {\n\n        if (this.state.isLoading) {\n            return <p>Loading ...</p>;\n        }\n        return (\n            <div id=\"main\">\n                <article className=\"post\">\n                    <header>\n                        <div className=\"title\">\n                            <h2>ID: {this.state.selected_id}</h2>\n                        </div>\n\n                    </header>\n\n                    <div className=\"mini-posts\">\n                        <div>\n                            <h2>Context</h2>\n                            <p>{this.state.data.article} </p>\n                        </div>\n                        <div>\n                            <h2>Question</h2>\n                            <h3>{this.state.data.questions}</h3>\n                            <h2>Model generate result</h2>\n                            <ul>\n                                {this.state.data.options.model.map((key, index) => (\n                                    <li key={key + index}\n                                        style={{color: index === this.state.data.answer.model ? \"crimson\" : \"black\"}}>\n                                        {key}\n                                    </li>\n                                ))}\n                            </ul>\n                            <br/>\n                            <h2>Human generate result</h2>\n                            <ul>\n                                {this.state.data.options.human.map((key, index) => (\n                                    <li key={key + index}\n                                        style={{color: index === this.state.data.answer.human ? \"crimson\" : \"black\"}}>\n                                        {key}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n\n                </article>\n            </div>\n        );\n    }\n}\n\nexport default MAIN;\n","import React from 'react';\nimport './App.css';\nimport MAIN from \"./component/main\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected_id: this.random()\n        }\n\n        this.random = this.random.bind(this)\n    }\n\n    random() {\n        const top_500_entropy = ['4127', '4176', '4763', '5238', '334', '4386', '773', '54', '1309', '5790', '1988', '851', '2618', '2687', '1822', '585', '3885', '4976', '1419', '3017', '5699', '291', '5728', '5095', '458', '206', '132', '1563', '3143', '5505', '1410', '1032', '1213', '4390', '4850', '5360', '2349', '4734', '2868', '4791', '1257', '1501', '1255', '5480', '3253', '1010', '4428', '5254', '1948', '4738', '4569', '5686', '5355', '2706', '504', '282', '1227', '4859', '4714', '5349', '4848', '327', '4856', '764', '3881', '4349', '5674', '1510', '763', '3065', '248', '3510', '5429', '5444', '4970', '5263', '765', '4721', '78', '812', '4515', '2038', '2426', '3653', '5660', '4712', '3476', '757', '1929', '1544', '4168', '1101', '5125', '4465', '2127', '1896', '3208', '3255', '177', '5701', '4382', '4385', '2449', '3178', '5543', '3735', '4419', '4065', '1427', '3080', '4612', '2586', '3694', '623', '1731', '3639', '1614', '1187', '1334', '3931', '5588', '1426', '84', '371', '3554', '4633', '1106', '2987', '2456', '3887', '5227', '3567', '1205', '2953', '4104', '1653', '312', '5735', '243', '783', '2726', '867', '138', '2199', '2258', '3318', '1549', '2291', '1142', '2539', '3897', '2051', '2198', '2387', '4913', '3971', '3036', '403', '2014', '3623', '337', '5612', '1767', '611', '3502', '2260', '4903', '441', '2943', '1183', '5419', '943', '234', '398', '2227', '3575', '5569', '3797', '2682', '2018', '2382', '487', '690', '4753', '331', '974', '3811', '4487', '5744', '4926', '4210', '2946', '828', '1208', '2556', '3048', '1423', '610', '1051', '4657', '5757', '792', '5117', '3321', '958', '117', '3286', '713', '936', '1624', '1014', '1365', '5626', '1687', '1167', '1604', '3015', '2210', '3302', '497', '3762', '3098', '2133', '2334', '2710', '4722', '4486', '4368', '934', '853', '1534', '986', '5354', '300', '309', '5597', '5381', '61', '5012', '4830', '2475', '5571', '2907', '416', '498', '840', '2944', '3092', '2186', '728', '207', '3439', '4268', '2004', '5290', '1230', '3345', '3071', '1519', '5459', '2524', '5292', '3377', '4587', '4013', '825', '5416', '5552', '4466', '2518', '3327', '2136', '2359', '4287', '3847', '657', '1065', '5608', '4322', '4684', '4740', '533', '5723', '3487', '1302', '2925', '2990', '656', '5751', '3506', '3137', '2686', '4843', '3334', '4017', '795', '1437', '5367', '75', '5704', '634', '4082', '1506', '1578', '2583', '2665', '1924', '4497', '4930', '4261', '5482', '4167', '5110', '1600', '4665', '5584', '2607', '1164', '3628', '4723', '143', '3813', '288', '1683', '3737', '1970', '1008', '805', '4483', '3979', '4832', '1662', '5200', '5761', '755', '1324', '2795', '237', '3678', '3693', '577', '814', '5187', '5246', '3864', '1547', '2533', '4713', '5158', '3523', '1616', '2601', '5130', '5510', '4405', '4075', '5260', '3312', '870', '1975', '4595', '2187', '1102', '2308', '1811', '2214', '1850', '1184', '2553', '195', '4036', '1703', '2588', '770', '81', '600', '1595', '5615', '2424', '4290', '4777', '2792', '3204', '5339', '3149', '4799', '1740', '5050', '1801', '707', '2289', '1498', '2189', '5765', '4124', '2501', '4834', '4778', '1125', '2738', '3141', '2799', '4051', '4459', '3166', '908', '5049', '872', '2298', '2571', '1764', '1193', '419', '1521', '1815', '5314', '1984', '5540', '769', '3800', '1278', '3305', '2606', '1397', '903', '3247', '1072', '5586', '381', '1242', '2435', '5145', '950', '3119', '319', '4227', '5633', '1284', '3806', '1407', '2734', '1393', '3450', '1314', '1874', '2829', '2294', '2361', '1235', '1209', '4409', '4010', '5711', '4749', '5497', '4725', '3630', '752', '3719', '3121', '5018', '166', '4827', '3214', '4262', '316', '5398', '1421', '3186', '5436', '1116', '5450', '5462', '2413', '2673', '5308', '3739', '678', '5243', '3402', '4077', '202', '1037', '341', '2695', '4215', '1176', '362', '1709', '5299', '5094', '5781', '4058', '1707', '5235', '3230', '1818', '365', '5298', '1655', '3603']\n        return top_500_entropy[Math.floor(Math.random() * top_500_entropy.length)];\n        // return Math.floor(Math.random() * 5792) + 1 //5792 is total num of data\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <div id=\"wrapper\">\n                        <header id=\"header\">\n                            <h1>\n                                <a href=\"index.html\">Distractor Generator Showcase</a>\n                            </h1>\n                        </header>\n                        <MAIN selected_id={this.state.selected_id}/>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}